---
title: "Working with data in 2024"
subtitle: "State of the art workflows not just for Computer Scientists"
author: "Nick Young, Jens Brinkmann"
institute: "The University of Auckland"
date: 2024-07-08
date-format: "MMMM, YYYY"
# bibliography: refs.bib
from: markdown+emoji
# embed-resources: false
format:
  revealjs:
    # tbl-cap-location: bottom
    # number-sections: true
    theme: UoAtemplate.scss
    # css: ./logo.css
    # disableLayout: true
    navigation-mode: vertical
    controls-layout: bottom-right
    controls-tutorial: true
    transition: convex
    width: 1600
    height: 900
    margin: 0.2
    # logo: "./UoALogoDarkBlueRGBLandscape.png"
    title-slide-attributes:
        data-background-image: UoALogoDarkBlueRGBLandscape.png
        data-background-size: 20%
        # data-background-postion: right
        data-background-position: 95% 76%
        # data-background-position: bottom 10px right 20px
    # background-image: ./ResBaz_transparent_Logo_cropped.svg
    # background-opacity: 0.5
    # background-position: bottom 10px right 20px
    # background-size: contain
    # data-background-repeat: no-repeat
    # background-size: 80px
    # background-repeat: no-repeat
    # background-position: 0% 100%
    # logo: ResBaz_transparent_cropped.svg
    # self_contained: false
    reveal_plugins: ["menu"]
    reveal_options:
      menu:
        numbers: true
    header: State of the Art Workflows for working with data in 2024
    header-logo: UoALogoDarkBlueRGBLandscape.png
    hide-from-titleSlide: all
    filters:
      - reveal-header
      - line-highlight
    mermaid:
      theme: dark
      fig-responsive: false  
# include-in-header: 
#   text: |
#     <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">

editor:
  render-on-save: true
  # execute:
  #   echo: false

revealjs-plugins:
  - attribution

--- 


# What this session is about and how it relates?
- an introduction
- there are realted sessions
- there is homework :briefcase: 
- if fully immerse yourself in all these sessions, you will get up to speed quickly. 
- A good *bang for the buck* :money_with_wings:

```{mermaid}
%%| fig-width: 15
%%| fig-height: 5
flowchart LR
  A[fa:fa-phone] --> B{Decision}
  B --> C[just observe]
  B --> D[get involved]
  C --> E[get an overivew and hear buzzwords]
  D --> F[get hands-on experience]
```



## This session vs. related
- This session is the introduction. Let's call it **Level** :one:
  - We will mostly talk
  - Nick is the expert who taught Jens many things over the past years, we'll replicate some of the back and forth
  - We will provide you with an overview
  - you are asked to think about **examples** you'd like see used in the upcoming sessions
- You can decide if you just want to listen or if you want to follow along
  - If you want to get your hands dirty, hold your horses :horse:
  - don't miss out now
  - the next sessions will be all about hands-on experience with the tools :hammer_and_wrench:
- There is homework :briefcase: 
  - see later slides


<!-- TODO #6 PUT SOME ICONS (VSC, ... GIT, ... here) -->

## Homework :briefcase: 
- Install software
<!-- TODO #7 put 3 tabs win,osx,linux -->
- Get a dataset (git pull/GitHub Desktop)
- run this one line, to see what if it works. 

## The support via Slack
- We have a Slack channel
- We will be available for questions
- This is a premiere, so let's see how many quesitons we can answer 

## The next session or Level :two:
- Here we will go through several steps
- We will use a real-world example
- In case you, as a group, haven't agreed on a dataset of highest relevance, to be used, we will provide one


# The software 'stack' that we will use
- [Visual Studi Code (VSC)](https://code.visualstudio.com/)
- [Python](https://www.python.org/)
- [Jupyter Notebooks](https://jupyter.org/)
- [Git](https://git-scm.com/)
- [GitHub](https://github.com/)
- [Geopandas](https://geopandas.org/en/stable/), [Folium](https://python-visualization.github.io/folium/latest/)




## Useful links
- [how to create GitHub Issues right in VSC](https://code.visualstudio.com/blogs/2020/05/06/github-issues-integration)

# Overview

The stack

- Operating Systems ({{< fa brands apple >}}, {{< fa brands windows >}}, {{< fa brands linux >}})
- {{< fa brands python >}} Python 
  - ![](/Data2024Assets/jupyter.svg){ height="1em" loading=lazy} Jupyter
- ![](/Data2024Assets/visual-studio-code.svg){ height="1em" loading=lazy} Visual Studio Code
- Git {{< fa brands git >}} and GitHub {{< fa brands github >}}
  - GHA ([GitHubActions](https://github.com/features/actions)) {{< fa circle-play >}}
<!-- TODO #9 -->



## Operating Systems

- Windows
  - Windows Subsystem for Linux [WSL](https://en.wikipedia.org/wiki/Windows_Subsystem_for_Linux) 
- MacOS
  - install [Python via HomeBrew](https://docs.brew.sh/Homebrew-and-Python)
- Linux
  - Ubuntu
  - Fedora
  - Debian
  - Arch
  - ...

## Programming Language: Python
:::: {.columns}
::: {.column width=60%}

- Python is 
  - a high-level/abstract and general-purpose programming language
  - an interpreted language (not compiled)
- Python is dynamically typed (no need to declare variables)
- Python is easy to 
  -  *read, maintain, write, debug, extend, integrate with other languages, deploy, scale, share, collaborate, teach*
:::

::: {.column width=40%}
  ![](Data2024Assets/CvsPythonMeme.JPG)
:::
::::

## Programming Language: Python - continued
::: {.callout-tip}
## Personal opinion

- a common statement is that Python is slow
  - in reality, you can run (encapsulated) other languages
- being a **relatively abstract languge** makes it suitable for many research projects (no need to reinvent the wheel)
- The **community** is great! 
  - **most popular**/[most searched](https://www.statista.com/chart/16567/popular-programming-languages/) for on Google 
  - there are tons of **great libraries** that can be used 
  - because Python is so popular, **ChatGPT and other Machine Learning (ML) powered support tools** can write pretty decent code (date of writing this = April 2024).
- some report issues with **libraries** and changes to them
    - there are many ways of dependency management (`requirements.txt` or [Poetry](https://python-poetry.org/)) version-controlling your code and making sure it is reproducible
:::

## IDE - VSC (TLA)





::: {.columns}
::: {.column width=50%}
An IDE is an Integrated Development Environment.
(a TLA is a Three Letter Acronym)
You can do everything we will talk today in a simple text editor, using your operating system's file explorer, a command-line terminal, but an IDE makes your life easier. 
- [Visual Studio Code (VSC)](https://code.visualstudio.com/)
![](/Data2024Assets/visual-studio-code.svg){ height="1em" loading=lazy} 
  - VSCodium ![](/Data2024Assets/VSCodium.png){ height="1em" loading=lazy} 
    - (open-source version that isn't collection telemetry data)
- PyCharm  ![](/Data2024Assets/PyCharm_Icon%20(1).svg){ height="1em" loading=lazy} and others specialised for certain programming languages
:::

::: {.column width=50%}

![](/Data2024Assets/VSCOverview.png){ height="100%" loading=lazy}
[more information on the official website]([link](https://code.visualstudio.com/docs/getstarted/userinterface))
:::
::::

::: {.attribution}
Photo courtesy of [Visual Studio Code](https://code.visualstudio.com/docs/getstarted/userinterface)
:::

## How to navigate in VSC

- if you are familiar with the layout, it is easy
- if you are a novice, it might overwhelm you
  - Jens: I have been there and I got lost
- think of it as a 
  - file explorer (usually on the left)
  - terminal (usually at the bottom)
  - one or many editors (usually in the middle)
    - at times they have preview windows, too
- there are many plugins; we will use:
  -  GitHub
     - GitHub CoPilot 
  - Python
    - we will create a virutal environment
  - we will show you (only show you) how to connect to a remote server (that might be another physical machine/like your computer at home or a cloud service, like the research infrastructure at the University of Auckland (UoA), [Nectar](https://research-hub.auckland.ac.nz/research-software-and-computing/advanced-compute/nectar-research-cloud) of [AWS](https://aws.amazon.com/))

## Git and GitHub and GitHub Actions

- Git is a version control system
  - sparing you the technical details, and sharing a pragmatic view: This is (part of) what's going on *under the hood* of GitHub
  - we recommend using Git in our [RDM Workshops](https://research-hub.auckland.ac.nz/guide-to-managing-research-data/rd-support-and-training/managing-research-data-workshops)
- GitHub is a platform that hosts Git repositories
  - to be blunt: This is how you interact with Git (there are alternatives/[GitLab](https://about.gitlab.com/), [BitBucket](https://bitbucket.org/product?&aceid=&adposition=&adgroup=146041740191&campaign=18815940148&creative=632894031333&device=c&keyword=bitbucket&matchtype=e&network=g&placement=&ds_kids=p74116809522&ds_e=GOOGLE&ds_eid=700000001551985&ds_e1=GOOGLE&gad_source=1&gclid=CjwKCAjw5ImwBhBtEiwAFHDZxx9EXw2lhK5gJQTVGjT44QGKC-UpJxjHi4_K7_sj5KkQjgTp03l8jRoCFOoQAvD_BwE&gclsrc=aw.ds), ...)
  - it is also 
    - a social network for developers
    - a place where you can find code, share code, collaborate on code, and get feedback on code
- You can have public repositories (fancy way of saying *project folders*) in the general free plan, at UoA (and potentially other academic institutions) you can have free private repositories, too
TODO #10
- GitHub Action (GHA)
  - this is a way to automate things 
  - in theory, you can do everything you can do on your computer, on GitHub; so you could use your smartphone to write code that is then executed on a server in the cloud